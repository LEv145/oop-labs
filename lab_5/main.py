from datetime import date

from sqlmodel import create_engine, SQLModel

from user import User
from repository import UserRepository
from auth import AuthService


def main() -> None:
    engine = create_engine(f"sqlite:///meow.db", echo=False)
    SQLModel.metadata.create_all(engine)

    repo = UserRepository(engine=engine)
    auth = AuthService(repo)

    print("=== –¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ë–î ===")
    for user in sorted(repo.get_all()):
        print(user)

    admin = repo.get_by_login("admin")
    if not admin:
        print("=== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ admin === ")
        admin = User(name="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", login="admin", password="admin123", email="root@example.com")
        repo.add(admin)
        print("–î–æ–±–∞–≤–ª–µ–Ω:", admin)

    # –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º admin
    print("=== –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è admin ===")
    auth.sign_in(admin)

    # –∏–∑–º–µ–Ω–∏–º email
    print("=== –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ admin (email) ===")
    admin.email = f"admin@{date.today().year}.corp"
    repo.update(admin)
    print("–ü–æ—Å–ª–µ update:", admin)

    print("=== –°–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è -> guest ===")
    guest = repo.get_by_login("guest")
    if guest is None:
        guest = User(name="–ì–æ—Å—Ç—å", login="guest", password="guest")
        repo.add(guest)
    auth.sign_in(guest)

    print("=== –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ë–î ===")
    for user in sorted(repo.get_all()):
        status = " <‚àí —Ç–µ–∫—É—â–∏–π" if user.is_logged_in else ""
        print(user, status)

    print("\nüîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É ‚Äî —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑—É–µ—Ç `guest`")


if __name__ == "__main__":
    main()
